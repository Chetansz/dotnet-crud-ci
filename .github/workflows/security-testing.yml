name: Security and Functional Testing

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  security-testing:
    runs-on: ubuntu-latest
    
    services:
      sonarqube:
        image: sonarqube:latest
        ports:
          - 9000:9000
      
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Cache SonarQube packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Build and Run SAST with SonarQube
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          mvn clean verify sonar:sonar \
            -Dsonar.host.url=http://localhost:9000 \
            -Dsonar.login=$SONAR_TOKEN \
            -Dsonar.projectKey=spring-boot-app \
            -Dsonar.java.binaries=target/classes

      - name: Start Spring Boot Application
        run: |
          mvn spring-boot:run &
          echo "Waiting for application to start..."
          sleep 30

      - name: Run OWASP ZAP Scan
        uses: zaproxy/action-baseline@v0.9.0
        with:
          target: 'http://localhost:8080'
          rules_file_name: '.zap/rules.tsv'
          cmd_options: '-a'

      - name: Install Newman
        run: |
          npm install -g newman
          npm install -g newman-reporter-htmlextra

      - name: Run Postman Tests
        run: |
          newman run ./Tests/Postman/TodoApi.postman_collection.json \
            --reporters cli,htmlextra \
            --reporter-htmlextra-export ./test-results/newman/report.html

      - name: Generate Consolidated Report
        run: |
          mkdir -p ./test-results/consolidated
          echo "# Security and Functional Testing Report" > ./test-results/consolidated/report.md
          echo "## SAST Results" >> ./test-results/consolidated/report.md
          cat target/sonar/report-task.txt >> ./test-results/consolidated/report.md
          echo "## DAST Results" >> ./test-results/consolidated/report.md
          cat zap-report.html >> ./test-results/consolidated/report.md
          echo "## Functional Test Results" >> ./test-results/consolidated/report.md
          cat ./test-results/newman/report.html >> ./test-results/consolidated/report.md

      - name: Upload Test Results
        uses: actions/upload-artifact@v3
        with:
          name: test-results
          path: |
            ./test-results
            ./target/sonar
            ./zap-report.html

      - name: Cleanup
        if: always()
        run: |
          pkill -f 'spring-boot:run' || true
